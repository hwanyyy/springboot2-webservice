# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1

orbs:
  aws-s3: circleci/aws-s3@1.0.13

jobs:
  build:
    # OOM오류를 피하기 위해 JVM 및 Gradle을 구성
    environment:
      _JAVA_OPTIONS: "-Xmx3g" # Heap memory
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"

    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/springboot2-webservice

    steps:
      # workflow에서 트리거된 git branch를 checkout
      - checkout

      # Download and cache depen에dencies, keys에 저장된 키로 캐시에 저장된 내용을 복사
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Downloading Dependencies
          command: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}  # build.gradle 파일에서 무언가가 변경 될 때마다 캐시가 재생성되며,이 프로젝트의 다른 브랜치는 동일한 캐시 키를 생성합니다.

      - run: ./gradlew clean build

      - run:
          name: before_deploy
          command: |
            zip -r springboot2-webservice *
            mkdir -p deploy
            mv springboot2-webservice.zip deploy/springboot2-webservice.zip

  deploy:
    docker:
      - image: circleci/python:2.7
    steps:
      - checkout
      - aws-s3/sync:
          from: deploy
          to: 's3://hwany-springboot-build'
          aws-region: AWS_DEFAULT_REGION
      - aws-s3/copy:
          from: deploy/*
          to: 's3://hwany-springboot-build/deploy'
          aws-region: AWS_DEFAULT_REGION


workflows:
  version: 2.1
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master